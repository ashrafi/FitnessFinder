[versions]
androidGradlePlugin = "8.0.1"
androidxCore = "1.9.0"
androidxLifecycle = "2.6.1"
androidxActivity = "1.6.1"
androidxComposeUi = "1.3.3"
androidxComposeCompiler = "1.4.0"
androidxComposeMaterial3 = "1.0.1"
androidxHilt = "1.0.0"
androidxNavigation = "2.5.3"
androidxRoom = "2.5.0"
androidxDatastore = "1.0.0"
androidxTestExt = "1.1.5"
androidxTestRunner = "1.5.2"
coroutines = "1.6.4"
hilt = "2.44.2"
junit = "1.9.3.0"
#junit4 = "4.13.2"
kotlin = "1.8.0"
ksp = "1.8.20-1.0.11"
apollo = "3.7.4"
okhttp = "4.10.0"
accompanist = "0.28.0"
coil = "2.2.2"
compose-bom = "2023.04.00"
compose-ui-test = "1.4.3"
mapsplatformSecretsPlugin = "2.0.1"
compose-material-icons = "1.0.0-beta06"
kotlinxDate = "0.4.0"
composeMaps = "2.11.0"
playServices = "18.1.0"
playLocations = "21.0.1"
corPlayServices = "1.6.4"

junit5-test = "5.9.2"
junit-gradle = "1.2.0"
truth = "1.0"

kotest = "5.6.1"
iokotest = "0.4.10"
kotest-android = "1.0.0"

# test libraries
test-mockk = "1.13.5"
test-turbine = "0.12.3"

# android test libraries
test-android-runner = "1.5.2"

[libraries]

# production libraries
accompanist-permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanist" }
# accompanist-pager = { module = "com.google.accompanist:accompanist-pager", version.ref = "accompanist" }
# accompanist-indicators = { module = "com.google.accompanist:accompanist-pager-indicators", version.ref = "accompanist" }
accompanist-swipe-refresh = { module = "com.google.accompanist:accompanist-swiperefresh", version.ref = "accompanist" }

androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "androidxCore" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidxActivity" }

compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "compose-bom" }
androidx-compose-ui = { group = "androidx.compose.ui", name = "ui" }
androidx-compose-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
androidx-compose-ui-util = { group = "androidx.compose.ui", name = "ui-util" }
androidx-compose-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-compose-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-compose-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
androidx-compose-material3 = { group = "androidx.compose.material3", name = "material3" }
androidx-compose-material-icons = { module = "androidx.compose.material:material-icons-extended", version.ref = "compose-material-icons" }
# debug libraries
debug-compose-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }

androidx-hilt-navigation-compose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "androidxHilt" }
androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidxLifecycle" }
androidx-lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidxLifecycle" }
androidx-lifecycle-runtime-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidxLifecycle" }
androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "androidxNavigation" }
androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "androidxRoom" }
androidx-room-ktx = { module = "androidx.room:room-ktx", version.ref = "androidxRoom" }
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "androidxRoom" }
androidx-datastore = { module = "androidx.datastore:datastore-preferences", version.ref = "androidxDatastore" }
androidx-test-ext-junit = { module = "androidx.test.ext:junit", version.ref = "androidxTestExt" }
androidx-test-runner = { module = "androidx.test:runner", version.ref = "androidxTestRunner" }
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-android-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }
hilt-android-testing = { module = "com.google.dagger:hilt-android-testing", version.ref = "hilt" }
hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hilt" }
hilt-gradle-plugin = { module = "com.google.dagger:hilt-android-gradle-plugin", version.ref = "hilt" }

#ksp-symbol-processing-api = { module = "com.google.devtools.ksp:symbol-processing-api",version.ref = "ksp" }
#ksp-symbol-processing = { module = "com.google.devtools.ksp:symbol-processing",version.ref = "ksp" }

kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
kotlinx-date = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDate" }
kotlinx-coroutines-play-services = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "corPlayServices" }

okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
apollo-graphql = { module = "com.apollographql.apollo3:apollo-runtime", version.ref = "apollo" }
apollo-graphql-cache = { module = "com.apollographql.apollo3:apollo-normalized-cache", version.ref = "apollo" }
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }

# Google Maps
google-maps-compose = { module = "com.google.maps.android:maps-compose", version.ref = "composeMaps" }
play-services-location = { module = "com.google.android.gms:play-services-location", version.ref = "playLocations" }
play-services = { module = "com.google.android.gms:play-services-maps", version.ref = "playServices" }

# Testing

google-truth = { module = "com.google.truth:truth", version.ref = "truth" }
jetbrains-kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
junit-gradle = { module = "org.junit.platform:junit-platform-gradle-plugin", version.ref = "junit-gradle" }

test-mockk = { module = "io.mockk:mockk", version.ref = "test-mockk" }
test-mockk-android = { module = "io.mockk:mockk-android", version.ref = "test-mockk" }
test-turbine = { module = "app.cash.turbine:turbine", version.ref = "test-turbine" }


# junit4 = { module = "junit:junit", version.ref = "junit4" }
# androidx-compose-ui-test = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "compose-ui-test" } #in BoM?
androidx-compose-ui-test = { group = "androidx.compose.ui", name = "ui-test-junit4" }

# Jupiter JUnit 5
junit5-test = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit5-test" }
junit5-test-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit5-test" }
junit5-test-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit5-test" }
# "org.jetbrains.kotlin:kotlin-gradle-plugin:<kotlin-version>")
#jetbrains-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin"}

# KoTest -- looking to use this in the future.
kotest-runner-junit5-test-jvm = { module = "io.kotest:kotest-runner-junit5-test-jvm", version.ref = "kotest" }
# Test Framework / Property Testing / Assertions Library
kotest-framework-engine-jvm = { module = "io.kotest:kotest-framework-engine-jvm", version.ref = "kotest" }
kotest-property-jvm = { module = "io.kotest:kotest-property-jvm", version.ref = "kotest" }
kotest-assertions-jvm = { module = "io.kotest:kotest-assertions-core-jvm", version.ref = "kotest" }
# Not sure we need this ... still trying to work it out.
#kotest-runner-android = { module = "br.com.colman:kotest-runner-android", version.ref ="kotest-android"}
#kotest-gradel-plugin = { module = "io.kotest:kotest-gradle-plugin", version.ref = "iokotest" }

[plugins]
android-application = { id = "com.android.application", version.ref = "androidGradlePlugin" }
android-library = { id = "com.android.library", version.ref = "androidGradlePlugin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
kotlin-ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
junit = { id = "de.mannodermaus.android-junit5", version.ref = "junit" }
hilt-gradle = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
apollo-graphql = { id = "com.apollographql.apollo3", version.ref = "apollo" }
mapsplatform-secrets = { id = "com.google.android.libraries.mapsplatform.secrets-gradle-plugin", version.ref = "mapsplatformSecretsPlugin" }

#Not sure
io-kotest = { id = "io.kotest", version.ref = "iokotest" }



[bundles]

coroutines = [
    "kotlinx-coroutines-core",
    "kotlinx-coroutines-android",
]


unit-test = [
    "google-truth",
    "junit5-test",
    "junit5-test-api",
    "junit5-test-engine",
    "kotlinx-coroutines-test",
    "hilt-android-testing",
    "test-mockk",
    "test-turbine"
]

android-test = [
    "androidx-compose-ui-test",
    "androidx-test-runner",
    "hilt-android-compiler",
    "hilt-android-testing"
]
