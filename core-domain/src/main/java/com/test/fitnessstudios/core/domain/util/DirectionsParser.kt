package com.test.fitnessstudios.core.domain.util

import com.google.android.gms.maps.model.LatLng
import org.json.JSONException
import org.json.JSONObject


/**
 * Generated by ChatGPT(v4)
 * In this implementation, we've used a object instead of a class to create a singleton object.
 * The parse function takes a JSON string as input, and returns a List<LatLng> object.
 * Inside the parse function, we use the JSONObject class to parse the JSON string, and extract the
 * relevant data using the appropriate keys. We create a LatLng object for each step, and add it to
 * the latLngList. If there is an exception while parsing the JSON or creating the LatLng object,
 * we print the stack trace and return null.
 *
 * To use this DirectionsParser in your app, you can call the parse function and pass in the JSON
 * string returned by the Google Directions API. The function will return a List<LatLng> object that
 * you can use to draw the polyline on the map.
 */
object DirectionsParser {
    private const val KEY_ROUTES = "routes"
    private const val KEY_LEGS = "legs"
    private const val KEY_STEPS = "steps"
    private const val KEY_START_LOCATION = "start_location"
    private const val KEY_LATITUDE = "lat"
    private const val KEY_LONGITUDE = "lng"

    fun parse(json: String): List<LatLng>? {
        val latLngList = mutableListOf<LatLng>()
        try {
            val jsonObject = JSONObject(json)
            val routes = jsonObject.getJSONArray(KEY_ROUTES)
            val legs = routes.getJSONObject(0).getJSONArray(KEY_LEGS)
            val steps = legs.getJSONObject(0).getJSONArray(KEY_STEPS)
            for (i in 0 until steps.length()) {
                val step = steps.getJSONObject(i)
                val startLocation = step.getJSONObject(KEY_START_LOCATION)
                val lat = startLocation.getDouble(KEY_LATITUDE)
                val lng = startLocation.getDouble(KEY_LONGITUDE)
                latLngList.add(LatLng(lat, lng))
            }
        } catch (e: JSONException) {
            e.printStackTrace()
            return null
        }
        return latLngList
    }
}
